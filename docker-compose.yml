services:
  db:
    image: postgres:16-alpine
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: devopsdb
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpass
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devuser -d devopsdb || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 5s
    volumes:
      - db_data:/var/lib/postgresql/data

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: spring-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/devopsdb
      SPRING_DATASOURCE_USERNAME: devuser
      SPRING_DATASOURCE_PASSWORD: devpass
       # --- JWT (ต้องยาว >= 32 bytes สำหรับ HS256; แนะนำ 64 bytes ขึ้นไป) ---
      APP_JWT_SECRET: "uFrd1bQp5p9Hn3e3yM3jH0wH6b9Qh2b/8Qy6rH8cJz3pT2g7C1q9m3t4X6y8a1b2c3d4e5f6g7h8i9j0k1l2m3==" 
      APP_JWT_EXPIRATION: "3600"  # วินาที
    depends_on:
      db:
        condition: service_healthy
    ports: ["8080:8080"]

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile.dev   # ถ้าอยาก HMR ให้ใช้ .dev; โปรดักชันใช้ Dockerfile ปกติ
    container_name: frontend-dev
    depends_on: ["backend"]
    ports: ["5173:5173"]
    environment:
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
    volumes:
      - ./Frontend:/app
      - /app/node_modules
    command: ["npm", "run", "dev", "--", "--host"]

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    ports:
      - "8081:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  db_data:
  pgadmin_data:
